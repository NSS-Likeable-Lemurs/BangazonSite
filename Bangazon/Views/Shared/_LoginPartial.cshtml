@using Microsoft.AspNetCore.Identity
@using Bangazon.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{


    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
        <ul class="nav navbar-nav navbar-left">
            <li><a asp-area="" asp-controller="Products" asp-action="Create">Sell A Product</a></li>
            <li><a asp-area="" asp-controller="PaymentTypes" asp-action="Index">Add Payment</a></li>
            <li><a asp-area="" asp-controller="Orders" asp-action="Index">View Cart</a></li>
        </ul>


    </form>
    @* Author: Helen Chalmers and Dejan St
        Form: This is a searchBar in the NavBar - that is only seen once a user is logged into the database.
        
    *@
    <ul>
        <form asp-controller="Products" asp-action="SearchResults" method="get" class="nav-search">
            <input type="text" name="search" class="input-sm" placeholder="Search for a product" />
        </form>
    </ul>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}